{"version":3,"sources":["webpack:///./src/js/parsers/captions/vttparser.js"],"names":["VTTCue","timestampRegex","integerRegex","fullLineRegex","noteRegex","removeTimestampRegex","colonDelimRegex","stringDelimRegex","whitespaceRegex","arrowRegex","headerRegex","requestFrame","window","requestAnimationFrame","rafFunction","setTimeout","VTTParser","decoder","state","buffer","StringDecoder","regionList","maxCueBatch","decode","data","Error","decodeURIComponent","encodeURIComponent","parseTimeStamp","input","computeSeconds","h","m","s","f","match","replace","Settings","values","Object","create","prototype","set","k","v","get","dflt","defaultKey","has","alt","a","n","length","integer","test","parseInt","percent","parseFloat","parseOptions","callback","keyValueDelim","groupDelim","groups","split","i","kv","defaults","center","align","parseCue","cue","oInput","consumeTimeStamp","ts","consumeCueSettings","settings","id","region","vals","vals0","vertical","line","lineAlign","snapToLines","size","position","skipWhitespace","startTime","substr","endTime","parse","flushing","self","stream","collectNextLine","pos","parseHeader","console","log","errorHandler","oncue","e","alreadyCollectedLine","currentCueBatch","processBuffer","flush","hasSubstring","text","undefined","onflush"],"mappings":"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","file":"vttparser.js","sourcesContent":["/*\n * Source: https://github.com/mozilla/vtt.js/blob/master/dist/vtt.js#L1716\n */\n\ndefine(['parsers/captions/vttcue'], function(VTTCue) {\n    var timestampRegex = /^(\\d+):(\\d{2})(:\\d{2})?\\.(\\d{3})/;\n    var integerRegex = /^-?\\d+$/;\n    var fullLineRegex = /\\r\\n|\\n/;\n    var noteRegex = /^NOTE($|[ \\t])/;\n    var removeTimestampRegex = /^[^\\sa-zA-Z-]+/;\n    var colonDelimRegex = /:/;\n    var stringDelimRegex = /\\s/;\n    var whitespaceRegex = /^\\s+/;\n    var arrowRegex = /-->/;\n    var headerRegex = /^WEBVTT([ \\t].*)?$/;\n    var requestFrame = window.requestAnimationFrame ||\n        function (rafFunction) {\n            return window.setTimeout(rafFunction, 17);\n        };\n\n    var VTTParser = function(window, decoder) {\n        this.window = window;\n        this.state = 'INITIAL';\n        this.buffer = '';\n        this.decoder = decoder || new StringDecoder();\n        this.regionList = [];\n        this.maxCueBatch = 1000;\n    };\n\n    function StringDecoder() {\n        return {\n            decode: function(data) {\n                if (!data) {\n                    return '';\n                }\n                if (typeof data !== 'string') {\n                    throw new Error('Error - expected string data.');\n                }\n                return decodeURIComponent(encodeURIComponent(data));\n            }\n        };\n    }\n\n    // Try to parse input as a time stamp.\n    function parseTimeStamp(input) {\n\n        function computeSeconds(h, m, s, f) {\n            return (h | 0) * 3600 + (m | 0) * 60 + (s | 0) + (f | 0) / 1000;\n        }\n\n        var m = input.match(timestampRegex);\n        if (!m) {\n            return null;\n        }\n\n        if (m[3]) {\n            // Timestamp takes the form of [hours]:[minutes]:[seconds].[milliseconds]\n            return computeSeconds(m[1], m[2], m[3].replace(':', ''), m[4]);\n        } else if (m[1] > 59) {\n            // Timestamp takes the form of [hours]:[minutes].[milliseconds]\n            // First position is hours as it's over 59.\n            return computeSeconds(m[1], m[2], 0, m[4]);\n        }\n        // Timestamp takes the form of [minutes]:[seconds].[milliseconds]\n        return computeSeconds(0, m[1], m[2], m[4]);\n    }\n\n    // A settings object holds key/value pairs and will ignore anything but the first\n    // assignment to a specific key.\n    function Settings() {\n        this.values = Object.create(null);\n    }\n\n    Settings.prototype = {\n        // Only accept the first assignment to any key.\n        set: function(k, v) {\n            if (!this.get(k) && v !== '') {\n                this.values[k] = v;\n            }\n        },\n        // Return the value for a key, or a default value.\n        // If 'defaultKey' is passed then 'dflt' is assumed to be an object with\n        // a number of possible default values as properties where 'defaultKey' is\n        // the key of the property that will be chosen; otherwise it's assumed to be\n        // a single value.\n        get: function(k, dflt, defaultKey) {\n            if (defaultKey) {\n                return this.has(k) ? this.values[k] : dflt[defaultKey];\n            }\n            return this.has(k) ? this.values[k] : dflt;\n        },\n        // Check whether we have a value for a key.\n        has: function(k) {\n            return k in this.values;\n        },\n        // Accept a setting if its one of the given alternatives.\n        alt: function(k, v, a) {\n            for (var n = 0; n < a.length; ++n) {\n                if (v === a[n]) {\n                    this.set(k, v);\n                    break;\n                }\n            }\n        },\n        // Accept a setting if its a valid (signed) integer.\n        integer: function(k, v) {\n            if (integerRegex.test(v)) { // integer\n                this.set(k, parseInt(v, 10));\n            }\n        },\n        // Accept a setting if its a valid percentage.\n        percent: function(k, v) {\n            v = parseFloat(v);\n            if (v >= 0 && v <= 100) {\n                this.set(k, v);\n                return true;\n            }\n            return false;\n        }\n    };\n\n    // Helper function to parse input into groups separated by 'groupDelim', and\n    // interprete each group as a key/value pair separated by 'keyValueDelim'.\n    function parseOptions(input, callback, keyValueDelim, groupDelim) {\n        var groups = groupDelim ? input.split(groupDelim) : [input];\n        for (var i = 0; i <= groups.length; i += 1) {\n            if (typeof groups[i] !== 'string') {\n                continue;\n            }\n            var kv = groups[i].split(keyValueDelim);\n            if (kv.length !== 2) {\n                continue;\n            }\n            var k = kv[0];\n            var v = kv[1];\n            callback(k, v);\n        }\n    }\n    \n    var defaults = new VTTCue(0, 0, 0);\n    // 'middle' was changed to 'center' in the spec: https://github.com/w3c/webvtt/pull/244\n    // Chrome and Safari don't yet support this change, but FF does\n    var center = defaults.align === 'middle' ? 'middle' : 'center';\n\n    function parseCue(input, cue, regionList) {\n        // Remember the original input if we need to throw an error.\n        var oInput = input;\n        // 4.1 WebVTT timestamp\n        function consumeTimeStamp() {\n            var ts = parseTimeStamp(input);\n            if (ts === null) {\n                throw new Error('Malformed timestamp: ' + oInput);\n            }\n            // Remove time stamp from input.\n            input = input.replace(removeTimestampRegex, '');\n            return ts;\n        }\n\n        // 4.4.2 WebVTT cue settings\n        function consumeCueSettings(input, cue) {\n            var settings = new Settings();\n\n            parseOptions(input, function (k, v) {\n                switch (k) {\n                    case 'region':\n                        // Find the last region we parsed with the same region id.\n                        for (var i = regionList.length - 1; i >= 0; i--) {\n                            if (regionList[i].id === v) {\n                                settings.set(k, regionList[i].region);\n                                break;\n                            }\n                        }\n                        break;\n                    case 'vertical':\n                        settings.alt(k, v, ['rl', 'lr']);\n                        break;\n                    case 'line':\n                        var vals = v.split(','),\n                            vals0 = vals[0];\n                        settings.integer(k, vals0);\n                        if (settings.percent(k, vals0)) {\n                            settings.set('snapToLines', false);\n                        }\n                        settings.alt(k, vals0, ['auto']);\n                        if (vals.length === 2) {\n                            settings.alt('lineAlign', vals[1], ['start', center, 'end']);\n                        }\n                        break;\n                    case 'position':\n                        vals = v.split(',');\n                        settings.percent(k, vals[0]);\n                        if (vals.length === 2) {\n                            settings.alt('positionAlign', vals[1], ['start', center, 'end', 'line-left', 'line-right', 'auto']);\n                        }\n                        break;\n                    case 'size':\n                        settings.percent(k, v);\n                        break;\n                    case 'align':\n                        settings.alt(k, v, ['start', center, 'end', 'left', 'right']);\n                        break;\n                }\n            }, colonDelimRegex, stringDelimRegex);\n\n            // Apply default values for any missing fields.\n            cue.region = settings.get('region', null);\n            cue.vertical = settings.get('vertical', '');\n            var line = settings.get('line', 'auto');\n            if (line === 'auto' && defaults.line === -1) {\n                // set numeric line number for Safari\n                line = -1;\n            }\n            cue.line = line;\n            cue.lineAlign = settings.get('lineAlign', 'start');\n            cue.snapToLines = settings.get('snapToLines', true);\n            cue.size = settings.get('size', 100);\n            cue.align = settings.get('align', center);\n            var position = settings.get('position', 'auto');\n            if (position === 'auto' && defaults.position === 50) {\n                // set numeric position for Safari\n                position = cue.align === 'start' || cue.align === 'left' ? 0 : cue.align === 'end' || cue.align === 'right' ? 100 : 50;\n            }\n            cue.position = position;\n        }\n\n        function skipWhitespace() {\n            input = input.replace(whitespaceRegex, '');\n        }\n\n        // 4.1 WebVTT cue timings.\n        skipWhitespace();\n        cue.startTime = consumeTimeStamp();   // (1) collect cue start time\n        skipWhitespace();\n        if (input.substr(0, 3) !== '-->') {     // (3) next characters must match '-->'\n            throw new Error('Malformed time stamp (time stamps must be separated by \\'-->\\'): ' +\n                oInput);\n        }\n        input = input.substr(3);\n        skipWhitespace();\n        cue.endTime = consumeTimeStamp();     // (5) collect cue end time\n\n        // 4.1 WebVTT cue settings list.\n        skipWhitespace();\n        consumeCueSettings(input, cue);\n    }\n\n    VTTParser.prototype = {\n        parse: function (data, flushing) {\n            var self = this;\n\n            // If there is no data then we won't decode it, but will just try to parse\n            // whatever is in buffer already. This may occur in circumstances, for\n            // example when flush() is called.\n            if (data) {\n                // Try to decode the data that we received.\n                self.buffer += self.decoder.decode(data, { stream: true });\n            }\n\n            function collectNextLine() {\n                var buffer = self.buffer;\n                var pos = 0;\n                while (pos < buffer.length && buffer[pos] !== '\\r' && buffer[pos] !== '\\n') {\n                    ++pos;\n                }\n                var line = buffer.substr(0, pos);\n                // Advance the buffer early in case we fail below.\n                if (buffer[pos] === '\\r') {\n                    ++pos;\n                }\n                if (buffer[pos] === '\\n') {\n                    ++pos;\n                }\n                self.buffer = buffer.substr(pos);\n                return line;\n            }\n\n            // 3.2 WebVTT metadata header syntax\n            function parseHeader(input) {\n                parseOptions(input, function (k, v) {\n                    switch (k) {\n                        case 'Region':\n                            // 3.3 WebVTT region metadata header syntax\n                            console.log('parse region', v);\n                            // parseRegion(v);\n                            break;\n                    }\n                }, colonDelimRegex);\n            }\n\n            function errorHandler() {\n                // If we are currently parsing a cue, report what we have.\n                if (self.state === 'CUETEXT' && self.cue && self.oncue) {\n                    self.oncue(self.cue);\n                }\n                self.cue = null;\n                // Enter BADWEBVTT state if header was not parsed correctly otherwise\n                // another exception occurred so enter BADCUE state.\n                self.state = self.state === 'INITIAL' ? 'BADWEBVTT' : 'BADCUE';\n            }\n\n            // 5.1 WebVTT file parsing.\n            try {\n                var line;\n                if (self.state === 'INITIAL') {\n                    // We can't start parsing until we have the first line.\n                    if (!fullLineRegex.test(self.buffer)) {\n                        return this;\n                    }\n\n                    line = collectNextLine();\n\n                    var m = line.match(headerRegex);\n                    if (!m || !m[0]) {\n                        throw new Error('Malformed WebVTT signature.');\n                    }\n                    self.state = 'HEADER';\n                }\n            } catch (e){\n                errorHandler();\n                return this;\n            }\n\n            var alreadyCollectedLine = false;\n            var currentCueBatch = 0;\n            function processBuffer() {\n                try {\n                    while (self.buffer && currentCueBatch <= self.maxCueBatch) {\n                        // We can't parse a line until we have the full line.\n                        if (!fullLineRegex.test(self.buffer)) {\n                            self.flush();\n                            return this;\n                        }\n\n                        if (!alreadyCollectedLine) {\n                            line = collectNextLine();\n                        } else {\n                            alreadyCollectedLine = false;\n                        }\n\n                        switch (self.state) {\n                            case 'HEADER':\n                                // 13-18 - Allow a header (metadata) under the WEBVTT line.\n                                if (colonDelimRegex.test(line)) {\n                                    parseHeader(line);\n                                } else if (!line) {\n                                    // An empty line terminates the header and starts the body (cues).\n                                    self.state = 'ID';\n                                }\n                                break;\n                            case 'NOTE':\n                                // Ignore NOTE blocks.\n                                if (!line) {\n                                    self.state = 'ID';\n                                }\n                                break;\n                            case 'ID':\n                                // Check for the start of NOTE blocks.\n                                if (noteRegex.test(line)) {\n                                    self.state = 'NOTE';\n                                    break;\n                                }\n                                // 19-29 - Allow any number of line terminators, then initialize new cue values.\n                                if (!line) {\n                                    break;\n                                }\n                                self.cue = new VTTCue(0, 0, '');\n                                self.state = 'CUE';\n                                // 30-39 - Check if self line contains an optional identifier or timing data.\n                                if (!arrowRegex.test(line)) {\n                                    self.cue.id = line;\n                                    break;\n                                }\n                            // Process line as start of a cue.\n                            /* falls through*/\n                            case 'CUE':\n                                // 40 - Collect cue timings and settings.\n                                try {\n                                    parseCue(line, self.cue, self.regionList);\n                                } catch (e) {\n                                    // In case of an error ignore rest of the cue.\n                                    self.cue = null;\n                                    self.state = 'BADCUE';\n                                    break;\n                                }\n                                self.state = 'CUETEXT';\n                                break;\n                            case 'CUETEXT':\n                                var hasSubstring = arrowRegex.test(line);\n                                // 34 - If we have an empty line then report the cue.\n                                // 35 - If we have the special substring '-->' then report the cue,\n                                // but do not collect the line as we need to process the current\n                                // one as a new cue.\n                                if (!line || hasSubstring && (alreadyCollectedLine = true)) {\n                                    // We are done parsing self cue.\n                                    if (self.oncue) {\n                                        currentCueBatch += 1;\n                                        self.oncue(self.cue);\n                                    }\n                                    self.cue = null;\n                                    self.state = 'ID';\n                                    break;\n                                }\n                                if (self.cue.text) {\n                                    self.cue.text += '\\n';\n                                }\n                                self.cue.text += line;\n                                break;\n                            case 'BADCUE': // BADCUE\n                                // 54-62 - Collect and discard the remaining cue.\n                                if (!line) {\n                                    self.state = 'ID';\n                                }\n                                break;\n                        }\n                    }\n\n                    currentCueBatch = 0;\n                    if (self.buffer) {\n                        requestFrame(processBuffer);\n                    } else if (!flushing) {\n                        self.flush();\n                        return this;\n                    }\n                } catch (e) {\n                    errorHandler(e);\n                    return this;\n                }\n            }\n\n            // Immediately process some cues\n            processBuffer();\n        },\n        flush: function () {\n            var self = this;\n            try {\n                // Finish decoding the stream.\n                self.buffer += self.decoder.decode();\n                // Synthesize the end of the current cue or region.\n                if (self.cue || self.state === 'HEADER') {\n                    self.buffer += '\\n\\n';\n                    self.parse(undefined, true);\n                }\n                // If we've flushed, parsed, and we're still on the INITIAL state then\n                // that means we don't have enough of the stream to parse the first\n                // line.\n                if (self.state === 'INITIAL') {\n                    throw new Error('Malformed WebVTT signature.');\n                }\n            } catch(e) {\n                throw e;\n            }\n            if (self.onflush) {\n                self.onflush();\n            }\n            return this;\n        }\n    };\n\n    return VTTParser;\n});\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/js/parsers/captions/vttparser.js\n **/"],"sourceRoot":""}